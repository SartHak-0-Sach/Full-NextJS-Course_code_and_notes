Regardless of whichever framework or library you use, the basics and essence of HTML, CSS and JavaScript remains intact well within your needs. You have the clarity of their applications and you know that the Head tag contains the title and the styling for the page but that is when you use core HTML. There might be times when you want to write stuff in the Head tag, but find yourself stuck in Next Js where there are pages which export React components which we write and there is no Head.

For your sake, let me tell you that Next Js can do wonders for you. Next Js provides a Head component which lets you inject stuff in Head and change things like title of the page directly from the title tag present in the Head component. Due to this very ability of Next Js, we can enjoy the new, great features of Next Js while still using the good old HTML, CSS, and JavaScript. 


Let’s now see how it actually works.


next/Head
As a part of the previous tutorial, we started creating a blogging website named Hunting Coder. We created the applications with a very minimal change in its content. Open the same folder where you created the hunting coder application.


If you could carefully observe the default template of the application and visit the index.js page, you would find an import named Head from next/head. If that import were assumed to be removed, you would get an error to see. And this is because the default template of the application uses the Head component and features an executable program in it.

<Head>
        <title>Hunting Coder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
</Head>
 

The Head component contains the title tag which for our website has Hunting Coder written in it and this gets reflected on the browser’s title bar.  We could have used JavaScript instead of Next if we had been using React, but Next gives us the convenience of injecting elements directly into the Head. Using this, you can add a custom title, CSS and any meta tags within the head component of your web page as per your requirements. 

 

Some meta tags popularly used are,

Description - This meta tag is used to define the description of the webpage.
Keywords - This meta tag is used to define keywords for search engines.
 

The first thing was this. The other thing is that we can even inject external scripts into our programs by including them in the Head component, whether it is for Google Analytics or Search Console or anything. This is done using the <script> tag inside the <Head> tag. Script tag has a prop named src which gives it the location to the JavaScript file. Due to the time, it often takes for JavaScript to be executed, embedding external scripts into the program could sometimes cause trouble with how fast the webpage loads. Moreover, you do not want your website to slow down just because third-party external scripts failed to load on time. So, to overcome this, Next Js features a Script component as well.

 

next/Script
This Script component could easily be included into our programs using the following import.

import Script from 'next/script'
 

A Script component operates as follows:

<Script src=''>
</Script>
 

Now this Script component features several attributes and one of them being the strategy. This is used to set the loading priority of external scripts improving the loading performance of websites. By default, strategy is set to afterInteractive which means the scripts are loaded immediately after the page becomes interactive. But for heavy third-party scripts, we prefer lazyOnload. This enables the scripts to get loaded only after everything else is rendered already.

<Script src=' ' strategy='lazyOnload'>
</Script>
 

And that's how using scripts inside Head differs in functionalities from using a separate Script component. With this, we have configured both our Head and our Script components. You will soon see how these components are utilised in our programs. We’ll see the Image component in the next tutorial.