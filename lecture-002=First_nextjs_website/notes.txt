This lecture was an introductory lecture where we learned about how to setup our coding environment, along with discussing what all we are going to acomplish in this course in future.

Well, to be honest, I have always resisted the thought of learning new technology even whenever the need arises. I have always dismissed the idea, considering that it could be done with the existing technologies we already know about. However, learning NextJs is totally worth it. 
 

NextJs is a framework you will never regret learning. This is one of my favorite JavaScript frameworks. It provides endless possibilities for developing beautiful applications. NextJs is a React-based production framework using which we can develop React websites with great convenience.  Well, what convenience exactly does NextJs provide?


It supports,

Server-Side Rendering (SSR)
Static Site Generation (SSG)
Built-in Router 
And a lot of other tools for SEO of websites.
 
Essentially, NextJs has revolutionized the process of routing through its file-based routing, which we are going to learn about in the coming videos. Summarising, using NextJS helps you develop React websites in a very easy, convenient, and SEO-friendly way. 


With the help of NextJs, you get a lot of options for rendering on your website. NextJs is a great tool for static websites with no backend connections. If you wish, NextJs will provide you API routes as well, so it is not simply a front-end framework but also a back-end framework in some way or the other. And that enables you to program both the front end and the back end in NextJs.


A typical react application is rendered on the client-side, i.e., the Javascript bundle is loaded and then takes over to populate the dom using ajax calls. And if you could somehow open the source code of some React application, you wouldn't find the page content there itself because the content, in most of the cases, gets populated later through JavaScript. Well, this counts as one big problem for social media websites and search engines as they cannot find content in the HTML rendered by the react app. Well, NextJs addresses all such shortcomings a simple React application has, simply by introducing static site generation and server-side rendering, which ships the populated DOM to the client's browser!


And further today, we will install NextJS and see what tools we need to install to start using NextJs right away. And we will also set everything up in that regard which I recommend you all to follow for having a smooth and convenient experience building great applications. So, without any further ado, let’s get started.

 

Installing Node.js and npm
Follow the below-mentioned steps to build the whole setup you will need to start using NextJs:

1. So, move into your browsers, and we’ll start by downloading Node Js and the version that is recommended for most users.

2. Install NodeJs through the installer with all default settings. That may take some time. Wait while it finishes.

3. And now, I hope you all have already downloaded and installed VS Code on your systems. Download and install now, if you haven’t already. 

4. I have created a folder named NextJs Course and this is where I’ll put all my files pertaining to the course.

5. Open VsCode in the same folder.


Now, you might wonder if learning JavaScript or React is necessary to utilize NextJS, and my answer would be, yes! You do need to know the basics but that is what I’ll do in the beginning, and knowing things as and when required. We'll brush up on JavaScript basics as well as refresh our previous knowledge too.


Let’s now see how we develop Next Applications:

Next App Creation
Well, one can create individual files pertaining to Next applications too but we exploit a utility named Create Next App, and you can refer to the documentation Create Next App to have a knowledge of all of its uses. But that shouldn’t be a matter of worry for now since I'm here. There are methods we follow to create a Next app, but we solely stick to the yarn one for its advantages over npm. And that’s all we will cover in the coming videos while we slowly dive into the playlist.


So, NextJs is basically nothing but a framework for React. And you will develop React only, but with a little more convenience, and better and a lot more features. This concludes our discussion for today. Next.js is used in tens of thousands of production-facing websites and web applications, including many of the world's largest brands. I simply cannot hold my excitement while we have to wait for the next video where we’ll build our first Next application.


Now, we will start building our first Next.js application. You will see how easy it is!

You can always use npm to install packages, but I want you to resist the inertia and start working with yarn for a while (Its fast, its worth it, I promise!)

Install yarn using this command:

npm install --global yarn
 

Creating your first Next.js app
You can create your first Next.js application by running the following command:

yarn create next-app
This command will ask you a few basic questions (the name of your app, etc.) and will create a folder with your next.js app inside of it.

You can open the generated Next.js code in the editor of your choice. I am using VS Code.

 

A glance into the generated code
Create next app generates a bunch of useful files with a git repository initialized. You will also see some files some of which are discussed below:

lock – This is the yarn lock file which stores all the packages with version numbers installed inside the node_modules
.gitignore – A file that stores what is ignored by the git version control system
public folder – Contains the public directory of our Next.js web application. Anything put inside this folder will be publicly accessible on the web application’s server. Developers should avoid putting secret files inside this folder as they can easily be accessed by public users!
pages folder – Pages (which are essentially React components) following the file-based routing approach (more on this in the later lessons)
styles folder – Contains the CSS styles for the Next.js web application
 

Starting the server
If you look into the package.json file, you will find a script to run the development server. Open your terminal and run the following command:

yarn run dev
This will start the development server. Open the URL http://localhost:3000 (the URL shown in the terminal) by pressing control and clicking on it

Congratulations you have just started your first Next.js app. In the next lesson, we will learn how to customize this app to our liking. This will include changing the existing index.js page, adding more pages, adding styles, etc.